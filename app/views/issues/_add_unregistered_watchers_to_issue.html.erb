<% if @issue.project.module_enabled?("unregistered_watchers") %>

  <p id=issues_notify_unregistered_watchers>
    <% current_unregistered_watchers = @issue.unregistered_watchers.map(&:email) %>
    <% select_options_for_unregistered_watchers = options_for_select(current_unregistered_watchers, :selected => current_unregistered_watchers) %>
    <%= f.select :unregistered_watchers, select_options_for_unregistered_watchers, {}, {:multiple => true} %>
  </p>

  <script>

    var data = [];
    <% current_unregistered_watchers.each do |watcher_email| %>
      data.push({ id: '<%= watcher_email %>', text: '<%= watcher_email %>' });
    <% end %>
    $("#issue_unregistered_watchers").select2({
      containerCss: {width: '300px', minwidth: '300px'},
      width: 'style',
      tags: true,
      data: data,
      tokenSeparators: [',', ' '],
      language: {
        noResults: function() {
          return "Entrez une adresse email valide";
        }
      },
      createTag: function (query) {
        if(query.term != undefined && validateEmail(query.term)) {
          return {
            id: query.term,
            text: query.term,
            tag: true
          }
        } else {
          return null;
        }
      },
    });

    function validateEmail(email) {
      var re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
      return re.test(email);
    }

  </script>

<% end %>
